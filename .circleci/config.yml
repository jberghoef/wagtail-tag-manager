# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.7.7

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - run:
          name: Setup environment
          command: |
            sudo apt-get update
            sudo apt-get install -y libgtk2.0-0 libgtk-3-0 libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb
            curl -H 'Cache-Control: no-cache' https://raw.githubusercontent.com/fossas/fossa-cli/master/install.sh | bash

      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-deps-{{ .Branch }}-{{ checksum "setup.py" }}-{{ checksum "sandbox/requirements.txt" }}
            - v1-deps-{{ .Branch }}
            # fallback to using the latest cache if no exact match is found
            - v1-deps-

      - run:
          name: Install Dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r sandbox/requirements.txt

      - save_cache:
          paths:
            - ./venv
            - ~/.cache
          key: v1-deps-{{ .Branch }}-{{ checksum "setup.py" }}-{{ checksum "sandbox/requirements.txt" }}

      # - run:
      #     command: |
      #       . venv/bin/activate
      #       fossa

      # run tests!
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            py.test --nomigrations --reuse-db tests/ --cov=wagtail_tag_manager

      - run:
          name: coverage
          command: |
            . venv/bin/activate
            pip install codecov
            codecov

      - store_artifacts:
          path: test-reports
          destination: test-reports
